{"version":3,"sources":["webpack://frontend-starter-app/./src/App.scss","webpack://frontend-starter-app/./src/Routes.js","webpack://frontend-starter-app/./src/App.js","webpack://frontend-starter-app/./src/store/index.js","webpack://frontend-starter-app/./src/App.scss?c4c9"],"names":["___CSS_LOADER_API_IMPORT___","___CSS_LOADER_AT_RULE_IMPORT_0___","exports","i","push","module","id","SamplePage","lazy","OopsPage","NoPermissionsPage","Routes","Suspense","fallback","Bullseye","Spinner","Switch","Route","path","paths","component","Redirect","to","propTypes","childProps","PropTypes","history","App","props","useEffect","getRegistry","register","notifications","insights","chrome","init","identifyApp","on","event","navId","Fragment","NotificationsPortal","withRouter","connect","middleware","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"8GACA,IAAIA,EAA8B,EAAQ,MACtCC,EAAoC,EAAQ,OAChDC,EAAUF,GAA4B,IAC9BG,EAAEF,GAEVC,EAAQE,KAAK,CAACC,EAAOC,GAAI,kEAAmE,KAE5FD,EAAOH,QAAUA,G,qNCDXK,GAAaC,WAAK,kBAAM,2EACxBC,GAAWD,WAAK,kBAAM,0EACtBE,GAAoBF,WAAK,kBAAM,2EAUxBG,EAAS,kBAClB,kBAAC,EAAAC,SAAD,CAAUC,SAAU,kBAACC,EAAA,EAAD,KAChB,kBAACC,EAAA,GAAD,QAEA,kBAAC,EAAAC,OAAD,KACI,kBAAC,EAAAC,MAAD,CAAOC,KAAMC,QAAkBC,UAAWb,IAC1C,kBAAC,EAAAU,MAAD,CAAOC,KAAMC,QAAYC,UAAWX,IACpC,kBAAC,EAAAQ,MAAD,CAAOC,KAAMC,QAAqBC,UAAWV,IAE7C,kBAAC,EAAAO,MAAD,KACI,kBAAC,EAAAI,SAAD,CAAUC,GAAIH,cAM9BR,EAAOY,UAAY,CACfC,WAAYC,UAAgB,CACxBC,QAASD,UAAgB,CACrBrB,KAAMqB,c,gCC5BZE,EAAM,SAACC,GAcT,OAbAC,gBAAU,WAON,OANiBC,mBACRC,SAAS,CAAEC,gCACpBC,SAASC,OAAOC,OAGhBF,SAASC,OAAOE,YAAY,YACrBH,SAASC,OAAOG,GACnB,kBACA,SAAAC,GAAK,O,UAASV,MAAMF,QAAQtB,KAAnB,WAA4BkC,EAAMC,aAEhD,IAGC,kBAAC,EAAAC,SAAD,KACI,kBAAC,EAAAC,oBAAD,MACA,kBAAC9B,EAAD,CAAQa,WAAaI,MAKjCD,EAAIJ,UAAY,CACZG,QAASD,YAQb,SAAeiB,iBAAYC,eAAUhB,K,yFCnC9B,SAASQ,IAAqB,2BAAZS,EAAY,yBAAZA,EAAY,gBAMjC,OALWd,iBAAY,GAAD,CAClBe,KACAC,OAAwB,CAAEC,oBAAqB,CAAC,SAAU,YAFxC,OAGfH,M,sECFPI,EAAS,IAAI,IALH,CAEd,OAAiB,OACjB,WAAoB,IAMlB,IAAK,YAAkB3C,EAAO4C,IAAIC,WAAY,CAC5C,IA+BIC,EAAY,WAEhB9C,EAAO4C,IAAIG,OACT,MACA,cAnCkB,SAAuBC,EAAGC,EAAGC,GACnD,IAAKF,GAAKC,GAAKD,IAAMC,EACnB,OAAO,EAGT,IAAIE,EAEJ,IAAKA,KAAKH,EACR,GAKIA,EAAEG,KAAOF,EAAEE,GACb,OAAO,EAIX,IAAKA,KAAKF,EACR,IAKKD,EAAEG,GACL,OAAO,EAIX,OAAO,EAOIC,CAAcN,GADrB,YACgC,SAMxBA,EAAY,WAEZH,EAAO,MAPL3C,EAAO4C,IAAIC,gBAYzB7C,EAAO4C,IAAIS,SAAQ,WACjBV,OAIW","file":"js/487.e57d9b9bc5b6c8a07f68.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../node_modules/css-loader/dist/cjs.js!@redhat-cloud-services/frontend-components-notifications/index.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \":root{--ins-color--orange: #ec7a08}button:focus{outline:none}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\nimport React, { Suspense, lazy } from 'react';\nimport { routes as paths } from '../package.json';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst SamplePage = lazy(() => import(/* webpackChunkName: \"SamplePage\" */ './Routes/SamplePage/SamplePage'));\nconst OopsPage = lazy(() => import(/* webpackChunkName: \"OopsPage\" */ './Routes/OopsPage/OopsPage'));\nconst NoPermissionsPage = lazy(() => import(/* webpackChunkName: \"NoPermissionsPage\" */ './Routes/NoPermissionsPage/NoPermissionsPage'));\n\n/**\n * the Switch component changes routes depending on the path.\n *\n * Route properties:\n *      exact - path must match exactly,\n *      path - https://prod.foo.redhat.com:1337/insights/advisor/rules\n *      component - component to be rendered when a route has been chosen.\n */\nexport const Routes = () => (\n    <Suspense fallback={<Bullseye>\n        <Spinner />\n    </Bullseye>}>\n        <Switch>\n            <Route path={paths.samplePage} component={SamplePage} />\n            <Route path={paths.oops} component={OopsPage} />\n            <Route path={paths.noPermissions} component={NoPermissionsPage} />\n            { /* Finally, catch all unmatched routes */}\n            <Route>\n                <Redirect to={paths.samplePage} />\n            </Route>\n        </Switch>\n    </Suspense>\n);\n\nRoutes.propTypes = {\n    childProps: PropTypes.shape({\n        history: PropTypes.shape({\n            push: PropTypes.func\n        })\n    })\n};\n","import PropTypes from 'prop-types';\nimport React, { Fragment, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport { NotificationsPortal, notifications } from '@redhat-cloud-services/frontend-components-notifications/';\n\nconst App = (props) => {\n    useEffect(() => {\n        const registry = getRegistry();\n        registry.register({ notifications });\n        insights.chrome.init();\n\n        // TODO change this to your appname\n        insights.chrome.identifyApp('insights');\n        return insights.chrome.on(\n            'APP_NAVIGATION',\n            event => this.props.history.push(`/${event.navId}`)\n        );\n    }, []);\n\n    return (\n        <Fragment>\n            <NotificationsPortal />\n            <Routes childProps={ props } />\n        </Fragment>\n    );\n};\n\nApp.propTypes = {\n    history: PropTypes.object\n};\n\n/**\n * withRouter: https://reacttraining.com/react-router/web/api/withRouter\n * connect: https://github.com/reactjs/react-redux/blob/master/docs/api.md\n *          https://reactjs.org/docs/higher-order-components.html\n */\nexport default withRouter (connect()(App));\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\n\nlet registry;\n\nexport function init (...middleware) {\n    registry = getRegistry({}, [\n        promiseMiddleware,\n        notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n        ...middleware\n    ]);\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-config/src/css-prefix-loader.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/@redhat-cloud-services/frontend-components-config/src/css-prefix-loader.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./App.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}