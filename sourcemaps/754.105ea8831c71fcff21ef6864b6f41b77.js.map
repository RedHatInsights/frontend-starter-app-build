{"version":3,"file":"js/754.1675781423783.db6c0bf06d1ba361f68a.js","mappings":"+ZAQO,SAASA,I,IAAK,sDAMnB,OALW,QAAY,CAAC,EAAG,EAAF,CACvB,KACA,EAAAC,EAAA,IAAwB,CAAEC,oBAAqB,CAAC,SAAU,YACvDC,GAAU,GAGjB,C,kCCTMC,GAAa,IAAAC,OACjB,WACE,uCAIEC,GAAW,IAAAD,OACf,WAAM,wCAEFE,GAAoB,IAAAF,OACxB,WACE,wCAKSG,EAAS,WAAM,OAC1B,kBAAC,EAAAC,SAAQ,CACPC,SACE,kBAAC,EAAAC,SAAQ,KACP,kBAAC,EAAAC,QAAO,QAIZ,kBAAC,SAAY,KACX,kBAAC,EAAAC,MAAK,CAACC,KAAK,iBAAiBC,QAAS,kBAACR,EAAiB,QACxD,kBAAC,EAAAM,MAAK,CAACC,KAAK,OAAOC,QAAS,kBAACT,EAAQ,QACrC,kBAAC,EAAAO,MAAK,CAACC,KAAK,IAAIC,QAAS,kBAACX,EAAU,QAEpC,kBAAC,EAAAS,MAAK,CAACC,KAAK,IAAIC,QAAS,kBAACC,EAAA,EAAa,SAbjB,E,8BCO5B,QAlBY,WACF,IAAAC,GAAwB,EAAAC,EAAA,KAAW,oBAS3C,OAPA,IAAAC,YAAU,YACS,UACRC,SAAS,CAAEC,cAAe,OAEnCJ,EAAoB,cACtB,GAAG,IAGD,kBAAC,EAAAK,SAAQ,KACP,kBAAC,KAAmB,MACpB,kBAACd,EAAM,MAGb,E,QCvBA,IAAMe,EAAOC,SAASC,eAAe,QAErC,WAAgB,mBCAC,WAAM,OACrB,kBAAC,KAAQ,CACPC,MAAO1B,EAAA,WAAK,EAC6C,IACvD2B,YAEF,kBAAC,EAAG,MANe,GDAE,MAAKJ,GAAM,WAClC,OAAAA,aAAI,EAAJA,EAAMK,aAAa,iBAAkB,OAArC,G","sources":["webpack:///./src/store/index.ts","webpack:///./src/Routes.tsx","webpack:///./src/App.tsx","webpack:///./src/bootstrap.tsx","webpack:///./src/AppEntry.tsx"],"sourcesContent":["import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport notificationsMiddleware from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { Middleware, Reducer } from 'redux';\n\nexport let registry: ReducerRegistry<Reducer>;\n\nexport function init(...middleware: Middleware[]) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({ errorDescriptionKey: ['detail', 'stack'] }),\n    ...middleware,\n  ]);\n  return registry;\n}\n","import React, { Suspense, lazy } from 'react';\nimport { Route, Routes as RouterRoutes } from 'react-router-dom';\nimport { InvalidObject } from '@redhat-cloud-services/frontend-components/InvalidObject';\n\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst SamplePage = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"SamplePage\" */ './Routes/SamplePage/SamplePage'\n    )\n);\nconst OopsPage = lazy(\n  () => import(/* webpackChunkName: \"OopsPage\" */ './Routes/OopsPage/OopsPage')\n);\nconst NoPermissionsPage = lazy(\n  () =>\n    import(\n      /* webpackChunkName: \"NoPermissionsPage\" */ './Routes/NoPermissionsPage/NoPermissionsPage'\n    )\n);\n\nexport const Routes = () => (\n  <Suspense\n    fallback={\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    }\n  >\n    <RouterRoutes>\n      <Route path=\"no-permissions\" element={<NoPermissionsPage />} />\n      <Route path=\"oops\" element={<OopsPage />} />\n      <Route path=\"/\" element={<SamplePage />} />\n      {/* Finally, catch all unmatched routes */}\n      <Route path=\"*\" element={<InvalidObject />} />\n    </RouterRoutes>\n  </Suspense>\n);\n","import React, { Fragment, useEffect } from 'react';\nimport { Reducer } from 'redux';\n\nimport { Routes } from './Routes';\nimport './App.scss';\n\nimport { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nconst App = () => {\n  const { updateDocumentTitle } = useChrome();\n\n  useEffect(() => {\n    const registry = getRegistry();\n    registry.register({ notifications: notificationsReducer as Reducer });\n    // You can use directly the name of your app\n    updateDocumentTitle('Starter app');\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationsPortal />\n      <Routes />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from './AppEntry';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(<AppEntry />, root, () =>\n  root?.setAttribute('data-ouia-safe', 'true')\n);\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { init } from './store';\nimport App from './App';\nimport logger from 'redux-logger';\n\nconst AppEntry = () => (\n  <Provider\n    store={init(\n      ...(process.env.NODE_ENV !== 'production' ? [logger] : [])\n    ).getStore()}\n  >\n    <App />\n  </Provider>\n);\n\nexport default AppEntry;\n"],"names":["init","notificationsMiddleware","errorDescriptionKey","middleware","SamplePage","lazy","OopsPage","NoPermissionsPage","Routes","Suspense","fallback","Bullseye","Spinner","Route","path","element","InvalidObject","updateDocumentTitle","useChrome","useEffect","register","notifications","Fragment","root","document","getElementById","store","getStore","setAttribute"],"sourceRoot":""}